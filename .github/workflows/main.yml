name: Hprofile Actions

on:
  push:

jobs:
  Testing:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 3. Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      # 4. Install Dependencies and Tools
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq checkstyle openjdk-17-jdk
          wget https://dlcdn.apache.org/maven/maven-3/3.9.4/binaries/apache-maven-3.9.4-bin.tar.gz
          tar xzvf apache-maven-3.9.4-bin.tar.gz
          sudo ln -s apache-maven-3.9.4 /opt/maven
          echo "MAVEN_HOME=/opt/maven" >> $GITHUB_ENV
          echo "/opt/maven/bin" >> $GITHUB_PATH
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
          unzip sonar-scanner-cli-3.3.0.1492-linux.zip
          sudo ln -s sonar-scanner-3.3.0.1492-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      # 5. Run Maven Tests
      - name: Maven Test
        run: mvn test

      # 6. Run Checkstyle
      - name: Run Checkstyle
        run: mvn checkstyle:checkstyle

      # 7. SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          token: ${{ secrets.SONAR_TOKEN }}
          hostUrl: ${{ secrets.SONAR_URL }}
          sources: "src/"
          junitReportsPath: "target/surefire-reports/"
          jacocoReportsPath: "target/jacoco.exec"
          checkstyleReportPath: "target/checkstyle-result.xml"
          javaBinaries: "target/test-classes/com/visualpathit/account/controllerTest/"

      # 8. Evaluate Quality Gate
      - name: Evaluate Quality Gate
        run: |
          sleep 5
          curl -s https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.SONAR_PROJECT_KEY }} > result.json
          cat result.json
          STATUS=$(jq -r '.projectStatus.status' result.json)
          if [ "$STATUS" = "ERROR" ]; then
            echo "Quality Gate failed."
            exit 1
          else
            echo "Quality Gate passed."
          fi
